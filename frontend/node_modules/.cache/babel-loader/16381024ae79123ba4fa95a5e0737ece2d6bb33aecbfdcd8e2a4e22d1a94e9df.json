{"ast":null,"code":"import axios from 'axios';\n\n// Create an Axios instance with default config\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000'\n});\n\n// Add a request interceptor to add auth token\napi.interceptors.request.use(config => {\n  // In a real app, get the token from storage\n  // For our mock auth demo, we'll use a dummy token\n  config.headers.Authorization = `Bearer demo_token`;\n  return config;\n}, error => Promise.reject(error));\n\n// Document APIs\nexport const uploadDocument = async (file, title) => {\n  const formData = new FormData();\n  formData.append('file', file);\n  formData.append('title', title);\n  const response = await api.post('/upload', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  });\n  return response.data;\n};\nexport const getDocuments = async () => {\n  const response = await api.get('/documents');\n  return response.data;\n};\nexport const getDocument = async id => {\n  const response = await api.get(`/documents/${id}`);\n  return response.data;\n};\nexport const deleteDocument = async id => {\n  const response = await api.delete(`/documents/${id}`);\n  return response.data;\n};\n\n// Search APIs\nexport const searchDocuments = async (query, limit = 5) => {\n  const response = await api.post('/search', {\n    query,\n    limit\n  });\n  return response.data;\n};\n\n// Summary APIs\nexport const getDocumentSummary = async (id, summaryType = 'general', maxTokens = 500) => {\n  const response = await api.get(`/documents/${id}/summary`, {\n    params: {\n      summary_type: summaryType,\n      max_tokens: maxTokens\n    }\n  });\n  return response.data;\n};\n\n// Admin APIs\nexport const getAdminDocuments = async () => {\n  const response = await api.get('/admin/documents');\n  return response.data;\n};\n\n// Stats APIs\nexport const getStats = async () => {\n  const response = await api.get('/stats');\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","interceptors","request","use","config","headers","Authorization","error","Promise","reject","uploadDocument","file","title","formData","FormData","append","response","post","data","getDocuments","get","getDocument","id","deleteDocument","delete","searchDocuments","query","limit","getDocumentSummary","summaryType","maxTokens","params","summary_type","max_tokens","getAdminDocuments","getStats"],"sources":["E:/FULL STACK/AI Document Search/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create an Axios instance with default config\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\r\n});\r\n\r\n// Add a request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // In a real app, get the token from storage\r\n    // For our mock auth demo, we'll use a dummy token\r\n    config.headers.Authorization = `Bearer demo_token`;\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Document APIs\r\nexport const uploadDocument = async (file, title) => {\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('title', title);\r\n  \r\n  const response = await api.post('/upload', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\nexport const getDocuments = async () => {\r\n  const response = await api.get('/documents');\r\n  return response.data;\r\n};\r\n\r\nexport const getDocument = async (id) => {\r\n  const response = await api.get(`/documents/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteDocument = async (id) => {\r\n  const response = await api.delete(`/documents/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Search APIs\r\nexport const searchDocuments = async (query, limit = 5) => {\r\n  const response = await api.post('/search', { query, limit });\r\n  return response.data;\r\n};\r\n\r\n// Summary APIs\r\nexport const getDocumentSummary = async (id, summaryType = 'general', maxTokens = 500) => {\r\n  const response = await api.get(`/documents/${id}/summary`, {\r\n    params: {\r\n      summary_type: summaryType,\r\n      max_tokens: maxTokens,\r\n    },\r\n  });\r\n  \r\n  return response.data;\r\n};\r\n\r\n// Admin APIs\r\nexport const getAdminDocuments = async () => {\r\n  const response = await api.get('/admin/documents');\r\n  return response.data;\r\n};\r\n\r\n// Stats APIs\r\nexport const getStats = async () => {\r\n  const response = await api.get('/stats');\r\n  return response.data;\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI;AAC5C,CAAC,CAAC;;AAEF;AACAL,GAAG,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA;EACAA,MAAM,CAACC,OAAO,CAACC,aAAa,GAAG,mBAAmB;EAClD,OAAOF,MAAM;AACf,CAAC,EACAG,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;;AAED;AACA,OAAO,MAAMG,cAAc,GAAG,MAAAA,CAAOC,IAAI,EAAEC,KAAK,KAAK;EACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEJ,IAAI,CAAC;EAC7BE,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;EAE/B,MAAMI,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAEJ,QAAQ,EAAE;IACnDR,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOW,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMH,QAAQ,GAAG,MAAMrB,GAAG,CAACyB,GAAG,CAAC,YAAY,CAAC;EAC5C,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG,MAAOC,EAAE,IAAK;EACvC,MAAMN,QAAQ,GAAG,MAAMrB,GAAG,CAACyB,GAAG,CAAC,cAAcE,EAAE,EAAE,CAAC;EAClD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMK,cAAc,GAAG,MAAOD,EAAE,IAAK;EAC1C,MAAMN,QAAQ,GAAG,MAAMrB,GAAG,CAAC6B,MAAM,CAAC,cAAcF,EAAE,EAAE,CAAC;EACrD,OAAON,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMO,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,GAAG,CAAC,KAAK;EACzD,MAAMX,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,IAAI,CAAC,SAAS,EAAE;IAAES,KAAK;IAAEC;EAAM,CAAC,CAAC;EAC5D,OAAOX,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,kBAAkB,GAAG,MAAAA,CAAON,EAAE,EAAEO,WAAW,GAAG,SAAS,EAAEC,SAAS,GAAG,GAAG,KAAK;EACxF,MAAMd,QAAQ,GAAG,MAAMrB,GAAG,CAACyB,GAAG,CAAC,cAAcE,EAAE,UAAU,EAAE;IACzDS,MAAM,EAAE;MACNC,YAAY,EAAEH,WAAW;MACzBI,UAAU,EAAEH;IACd;EACF,CAAC,CAAC;EAEF,OAAOd,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,MAAMlB,QAAQ,GAAG,MAAMrB,GAAG,CAACyB,GAAG,CAAC,kBAAkB,CAAC;EAClD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMnB,QAAQ,GAAG,MAAMrB,GAAG,CAACyB,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}