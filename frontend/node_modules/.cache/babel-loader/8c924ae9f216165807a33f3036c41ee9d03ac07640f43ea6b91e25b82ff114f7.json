{"ast":null,"code":"var _jsxFileName = \"E:\\\\FULL STACK\\\\AI Document Search\\\\frontend\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, Button, TextField, Grid, IconButton, List, ListItem, ListItemText, ListItemIcon, ListItemSecondaryAction, CircularProgress, LinearProgress, Alert, Divider, Chip } from '@mui/material';\nimport { CloudUpload as UploadIcon, Delete as DeleteIcon, Description as DocIcon, PictureAsPdf as PdfIcon, InsertDriveFile as FileIcon, ArrowBack as ArrowBackIcon, Check as CheckIcon } from '@mui/icons-material';\nimport { uploadDocument } from '../services/storageService';\n\n// Map file types to icons\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst fileTypeIcons = {\n  'pdf': /*#__PURE__*/_jsxDEV(PdfIcon, {\n    color: \"error\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this),\n  'docx': /*#__PURE__*/_jsxDEV(DocIcon, {\n    color: \"primary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 11\n  }, this),\n  'txt': /*#__PURE__*/_jsxDEV(FileIcon, {\n    color: \"success\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this)\n};\nconst Upload = () => {\n  _s();\n  const navigate = useNavigate();\n  const fileInputRef = useRef(null);\n  const [files, setFiles] = useState([]);\n  const [titles, setTitles] = useState({});\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState({});\n  const [errors, setErrors] = useState({});\n  const [success, setSuccess] = useState([]);\n  const [dragActive, setDragActive] = useState(false);\n\n  // Supported file types\n  const supportedTypes = ['pdf', 'docx', 'txt'];\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    processSelectedFiles(selectedFiles);\n  };\n  const processSelectedFiles = selectedFiles => {\n    // Filter unsupported files and add them to the state\n    const validFiles = selectedFiles.filter(file => {\n      const extension = file.name.split('.').pop().toLowerCase();\n      return supportedTypes.includes(extension);\n    });\n\n    // Initialize titles for new files\n    const newTitles = {\n      ...titles\n    };\n    validFiles.forEach(file => {\n      if (!newTitles[file.name]) {\n        // Remove file extension for default title\n        const nameWithoutExt = file.name.substring(0, file.name.lastIndexOf('.'));\n        newTitles[file.name] = nameWithoutExt;\n      }\n    });\n    setTitles(newTitles);\n    setFiles([...files, ...validFiles]);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(true);\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    setDragActive(false);\n    const droppedFiles = Array.from(e.dataTransfer.files);\n    processSelectedFiles(droppedFiles);\n  };\n  const removeFile = fileName => {\n    setFiles(files.filter(file => file.name !== fileName));\n\n    // Clean up titles and errors\n    const newTitles = {\n      ...titles\n    };\n    delete newTitles[fileName];\n    setTitles(newTitles);\n    const newErrors = {\n      ...errors\n    };\n    delete newErrors[fileName];\n    setErrors(newErrors);\n  };\n  const handleTitleChange = (fileName, newTitle) => {\n    setTitles({\n      ...titles,\n      [fileName]: newTitle\n    });\n\n    // Clear error if title provided\n    if (newTitle.trim()) {\n      const newErrors = {\n        ...errors\n      };\n      delete newErrors[fileName];\n      setErrors(newErrors);\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n    files.forEach(file => {\n      if (!titles[file.name] || !titles[file.name].trim()) {\n        newErrors[file.name] = 'Title is required';\n        isValid = false;\n      }\n    });\n    setErrors(newErrors);\n    return isValid;\n  };\n  const uploadFiles = async () => {\n    if (!validateForm() || files.length === 0) return;\n    setUploading(true);\n    const successfulUploads = [];\n\n    // Process files one at a time\n    for (const file of files) {\n      try {\n        // Set initial progress\n        setUploadProgress(prev => ({\n          ...prev,\n          [file.name]: 0\n        }));\n\n        // Use a mock user ID until auth is implemented\n        const userId = 'user-123';\n\n        // Upload the file with progress tracking\n        await uploadDocument(file, titles[file.name], userId, progress => {\n          setUploadProgress(prev => ({\n            ...prev,\n            [file.name]: progress\n          }));\n        });\n\n        // Add to successful uploads\n        successfulUploads.push(file.name);\n      } catch (error) {\n        console.error(`Error uploading ${file.name}:`, error);\n        setErrors(prev => ({\n          ...prev,\n          [file.name]: `Upload failed: ${error.message || 'Unknown error'}`\n        }));\n      }\n    }\n    setSuccess(successfulUploads);\n\n    // Clear files that were successfully uploaded\n    if (successfulUploads.length > 0) {\n      setFiles(files.filter(file => !successfulUploads.includes(file.name)));\n    }\n    setUploading(false);\n  };\n  const getFileIcon = fileName => {\n    const extension = fileName.split('.').pop().toLowerCase();\n    return fileTypeIcons[extension] || /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 40\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => navigate(-1),\n        sx: {\n          mr: 2\n        },\n        \"aria-label\": \"back\",\n        children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: \"Upload Documents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), success.length > 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 3\n      },\n      onClose: () => setSuccess([]),\n      children: [\"Successfully uploaded \", success.length, \" document\", success.length !== 1 ? 's' : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3,\n        mb: 3,\n        border: '2px dashed',\n        borderColor: dragActive ? 'primary.main' : 'divider',\n        backgroundColor: dragActive ? 'rgba(0, 0, 0, 0.02)' : 'transparent',\n        transition: 'all 0.2s ease-in-out'\n      },\n      onDragOver: handleDragOver,\n      onDragLeave: handleDragLeave,\n      onDrop: handleDrop,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          py: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n          fontSize: \"large\",\n          color: \"primary\",\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Drag & Drop Files Here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: \"Supported formats: PDF, DOCX, TXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          ref: fileInputRef,\n          onChange: handleFileChange,\n          style: {\n            display: 'none'\n          },\n          accept: \".pdf,.docx,.txt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 24\n          }, this),\n          onClick: () => fileInputRef.current.click(),\n          disabled: uploading,\n          children: \"Select Files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: [\"Selected Documents (\", files.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: files.map((file, index) => {\n          const fileName = file.name;\n          const fileSize = (file.size / (1024 * 1024)).toFixed(2); // MB\n          const isUploading = uploading && uploadProgress[fileName] !== undefined;\n          const isUploaded = success.includes(fileName);\n          return /*#__PURE__*/_jsxDEV(ListItem, {\n            sx: {\n              mb: 2,\n              p: 2,\n              border: '1px solid',\n              borderColor: errors[fileName] ? 'error.light' : 'divider',\n              borderRadius: 1,\n              backgroundColor: isUploaded ? 'success.light' : 'transparent'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: getFileIcon(fileName)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Document Title\",\n                variant: \"outlined\",\n                size: \"small\",\n                value: titles[fileName] || '',\n                onChange: e => handleTitleChange(fileName, e.target.value),\n                error: Boolean(errors[fileName]),\n                helperText: errors[fileName],\n                disabled: isUploading || isUploaded,\n                sx: {\n                  mb: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 23\n              }, this),\n              secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"span\",\n                    children: [fileName, \" (\", fileSize, \" MB)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: fileName.split('.').pop().toUpperCase(),\n                    size: \"small\",\n                    sx: {\n                      ml: 1\n                    },\n                    color: fileName.endsWith('.pdf') ? 'error' : fileName.endsWith('.docx') ? 'primary' : 'success'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 25\n                }, this), isUploading && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    width: '100%'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n                    variant: \"determinate\",\n                    value: uploadProgress[fileName],\n                    sx: {\n                      height: 8,\n                      borderRadius: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    align: \"right\",\n                    color: \"text.secondary\",\n                    children: [Math.round(uploadProgress[fileName]), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: isUploaded ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                color: \"success\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                onClick: () => removeFile(fileName),\n                disabled: isUploading,\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3,\n          display: 'flex',\n          justifyContent: 'space-between'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"error\",\n          onClick: () => {\n            setFiles([]);\n            setTitles({});\n            setErrors({});\n          },\n          disabled: uploading || files.length === 0,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 38\n          }, this) : /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 71\n          }, this),\n          onClick: uploadFiles,\n          disabled: uploading || files.length === 0,\n          children: uploading ? 'Uploading...' : `Upload ${files.length} File${files.length !== 1 ? 's' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => navigate('/dashboard'),\n        disabled: uploading,\n        children: \"Go to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(Upload, \"h6wqpEyRUJ0ldkmS4UZ19N6ICWA=\", false, function () {\n  return [useNavigate];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","Container","Typography","Box","Paper","Button","TextField","Grid","IconButton","List","ListItem","ListItemText","ListItemIcon","ListItemSecondaryAction","CircularProgress","LinearProgress","Alert","Divider","Chip","CloudUpload","UploadIcon","Delete","DeleteIcon","Description","DocIcon","PictureAsPdf","PdfIcon","InsertDriveFile","FileIcon","ArrowBack","ArrowBackIcon","Check","CheckIcon","uploadDocument","jsxDEV","_jsxDEV","Fragment","_Fragment","fileTypeIcons","color","fileName","_jsxFileName","lineNumber","columnNumber","Upload","_s","navigate","fileInputRef","files","setFiles","titles","setTitles","uploading","setUploading","uploadProgress","setUploadProgress","errors","setErrors","success","setSuccess","dragActive","setDragActive","supportedTypes","handleFileChange","e","selectedFiles","Array","from","target","processSelectedFiles","validFiles","filter","file","extension","name","split","pop","toLowerCase","includes","newTitles","forEach","nameWithoutExt","substring","lastIndexOf","handleDragOver","preventDefault","stopPropagation","handleDragLeave","handleDrop","droppedFiles","dataTransfer","removeFile","newErrors","handleTitleChange","newTitle","trim","validateForm","isValid","uploadFiles","length","successfulUploads","prev","userId","progress","push","error","console","message","getFileIcon","maxWidth","sx","py","children","display","alignItems","mb","onClick","mr","variant","component","severity","onClose","p","border","borderColor","backgroundColor","transition","onDragOver","onDragLeave","onDrop","textAlign","fontSize","gutterBottom","paragraph","type","multiple","ref","onChange","style","accept","startIcon","current","click","disabled","map","index","fileSize","size","toFixed","isUploading","undefined","isUploaded","borderRadius","primary","fullWidth","label","value","Boolean","helperText","secondary","toUpperCase","ml","endsWith","width","height","align","Math","round","edge","mt","justifyContent","_c","$RefreshReg$"],"sources":["E:/FULL STACK/AI Document Search/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  CircularProgress,\r\n  LinearProgress,\r\n  Alert,\r\n  Divider,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  CloudUpload as UploadIcon,\r\n  Delete as DeleteIcon,\r\n  Description as DocIcon,\r\n  PictureAsPdf as PdfIcon,\r\n  InsertDriveFile as FileIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  Check as CheckIcon,\r\n} from '@mui/icons-material';\r\nimport { uploadDocument } from '../services/storageService';\r\n\r\n// Map file types to icons\r\nconst fileTypeIcons = {\r\n  'pdf': <PdfIcon color=\"error\" />,\r\n  'docx': <DocIcon color=\"primary\" />,\r\n  'txt': <FileIcon color=\"success\" />,\r\n};\r\n\r\nconst Upload = () => {\r\n  const navigate = useNavigate();\r\n  const fileInputRef = useRef(null);\r\n  const [files, setFiles] = useState([]);\r\n  const [titles, setTitles] = useState({});\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [success, setSuccess] = useState([]);\r\n  const [dragActive, setDragActive] = useState(false);\r\n\r\n  // Supported file types\r\n  const supportedTypes = ['pdf', 'docx', 'txt'];\r\n\r\n  const handleFileChange = (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    processSelectedFiles(selectedFiles);\r\n  };\r\n\r\n  const processSelectedFiles = (selectedFiles) => {\r\n    // Filter unsupported files and add them to the state\r\n    const validFiles = selectedFiles.filter(file => {\r\n      const extension = file.name.split('.').pop().toLowerCase();\r\n      return supportedTypes.includes(extension);\r\n    });\r\n\r\n    // Initialize titles for new files\r\n    const newTitles = { ...titles };\r\n    validFiles.forEach(file => {\r\n      if (!newTitles[file.name]) {\r\n        // Remove file extension for default title\r\n        const nameWithoutExt = file.name.substring(0, file.name.lastIndexOf('.'));\r\n        newTitles[file.name] = nameWithoutExt;\r\n      }\r\n    });\r\n\r\n    setTitles(newTitles);\r\n    setFiles([...files, ...validFiles]);\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(true);\r\n  };\r\n\r\n  const handleDragLeave = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    const droppedFiles = Array.from(e.dataTransfer.files);\r\n    processSelectedFiles(droppedFiles);\r\n  };\r\n\r\n  const removeFile = (fileName) => {\r\n    setFiles(files.filter(file => file.name !== fileName));\r\n    \r\n    // Clean up titles and errors\r\n    const newTitles = { ...titles };\r\n    delete newTitles[fileName];\r\n    setTitles(newTitles);\r\n    \r\n    const newErrors = { ...errors };\r\n    delete newErrors[fileName];\r\n    setErrors(newErrors);\r\n  };\r\n\r\n  const handleTitleChange = (fileName, newTitle) => {\r\n    setTitles({ ...titles, [fileName]: newTitle });\r\n    \r\n    // Clear error if title provided\r\n    if (newTitle.trim()) {\r\n      const newErrors = { ...errors };\r\n      delete newErrors[fileName];\r\n      setErrors(newErrors);\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n\r\n    files.forEach(file => {\r\n      if (!titles[file.name] || !titles[file.name].trim()) {\r\n        newErrors[file.name] = 'Title is required';\r\n        isValid = false;\r\n      }\r\n    });\r\n\r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n\r\n  const uploadFiles = async () => {\r\n    if (!validateForm() || files.length === 0) return;\r\n\r\n    setUploading(true);\r\n    const successfulUploads = [];\r\n    \r\n    // Process files one at a time\r\n    for (const file of files) {\r\n      try {\r\n        // Set initial progress\r\n        setUploadProgress(prev => ({ ...prev, [file.name]: 0 }));\r\n        \r\n        // Use a mock user ID until auth is implemented\r\n        const userId = 'user-123';\r\n        \r\n        // Upload the file with progress tracking\r\n        await uploadDocument(\r\n          file, \r\n          titles[file.name], \r\n          userId,\r\n          (progress) => {\r\n            setUploadProgress(prev => ({ ...prev, [file.name]: progress }));\r\n          }\r\n        );\r\n        \r\n        // Add to successful uploads\r\n        successfulUploads.push(file.name);\r\n      } catch (error) {\r\n        console.error(`Error uploading ${file.name}:`, error);\r\n        setErrors(prev => ({ \r\n          ...prev, \r\n          [file.name]: `Upload failed: ${error.message || 'Unknown error'}` \r\n        }));\r\n      }\r\n    }\r\n    \r\n    setSuccess(successfulUploads);\r\n    \r\n    // Clear files that were successfully uploaded\r\n    if (successfulUploads.length > 0) {\r\n      setFiles(files.filter(file => !successfulUploads.includes(file.name)));\r\n    }\r\n    \r\n    setUploading(false);\r\n  };\r\n\r\n  const getFileIcon = (fileName) => {\r\n    const extension = fileName.split('.').pop().toLowerCase();\r\n    return fileTypeIcons[extension] || <FileIcon />;\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\r\n        <IconButton \r\n          onClick={() => navigate(-1)} \r\n          sx={{ mr: 2 }}\r\n          aria-label=\"back\"\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h4\" component=\"h1\">\r\n          Upload Documents\r\n        </Typography>\r\n      </Box>\r\n\r\n      {success.length > 0 && (\r\n        <Alert \r\n          severity=\"success\" \r\n          sx={{ mb: 3 }}\r\n          onClose={() => setSuccess([])}\r\n        >\r\n          Successfully uploaded {success.length} document{success.length !== 1 ? 's' : ''}\r\n        </Alert>\r\n      )}\r\n\r\n      <Paper\r\n        sx={{\r\n          p: 3,\r\n          mb: 3,\r\n          border: '2px dashed',\r\n          borderColor: dragActive ? 'primary.main' : 'divider',\r\n          backgroundColor: dragActive ? 'rgba(0, 0, 0, 0.02)' : 'transparent',\r\n          transition: 'all 0.2s ease-in-out',\r\n        }}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n        onDrop={handleDrop}\r\n      >\r\n        <Box \r\n          sx={{ \r\n            textAlign: 'center',\r\n            py: 3,\r\n          }}\r\n        >\r\n          <UploadIcon fontSize=\"large\" color=\"primary\" sx={{ mb: 2 }} />\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Drag & Drop Files Here\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n            Supported formats: PDF, DOCX, TXT\r\n          </Typography>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            ref={fileInputRef}\r\n            onChange={handleFileChange}\r\n            style={{ display: 'none' }}\r\n            accept=\".pdf,.docx,.txt\"\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<UploadIcon />}\r\n            onClick={() => fileInputRef.current.click()}\r\n            disabled={uploading}\r\n          >\r\n            Select Files\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n\r\n      {files.length > 0 && (\r\n        <Paper sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Selected Documents ({files.length})\r\n          </Typography>\r\n          <Divider sx={{ mb: 2 }} />\r\n          \r\n          <List>\r\n            {files.map((file, index) => {\r\n              const fileName = file.name;\r\n              const fileSize = (file.size / (1024 * 1024)).toFixed(2); // MB\r\n              const isUploading = uploading && uploadProgress[fileName] !== undefined;\r\n              const isUploaded = success.includes(fileName);\r\n              \r\n              return (\r\n                <ListItem\r\n                  key={index}\r\n                  sx={{\r\n                    mb: 2,\r\n                    p: 2,\r\n                    border: '1px solid',\r\n                    borderColor: errors[fileName] ? 'error.light' : 'divider',\r\n                    borderRadius: 1,\r\n                    backgroundColor: isUploaded ? 'success.light' : 'transparent',\r\n                  }}\r\n                >\r\n                  <ListItemIcon>\r\n                    {getFileIcon(fileName)}\r\n                  </ListItemIcon>\r\n                  \r\n                  <ListItemText\r\n                    primary={\r\n                      <TextField\r\n                        fullWidth\r\n                        label=\"Document Title\"\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        value={titles[fileName] || ''}\r\n                        onChange={(e) => handleTitleChange(fileName, e.target.value)}\r\n                        error={Boolean(errors[fileName])}\r\n                        helperText={errors[fileName]}\r\n                        disabled={isUploading || isUploaded}\r\n                        sx={{ mb: 1 }}\r\n                      />\r\n                    }\r\n                    secondary={\r\n                      <>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                          <Typography variant=\"body2\" component=\"span\">\r\n                            {fileName} ({fileSize} MB)\r\n                          </Typography>\r\n                          <Chip \r\n                            label={fileName.split('.').pop().toUpperCase()} \r\n                            size=\"small\" \r\n                            sx={{ ml: 1 }}\r\n                            color={\r\n                              fileName.endsWith('.pdf') ? 'error' : \r\n                              fileName.endsWith('.docx') ? 'primary' : \r\n                              'success'\r\n                            }\r\n                          />\r\n                        </Box>\r\n                        \r\n                        {isUploading && (\r\n                          <Box sx={{ width: '100%' }}>\r\n                            <LinearProgress \r\n                              variant=\"determinate\" \r\n                              value={uploadProgress[fileName]} \r\n                              sx={{ height: 8, borderRadius: 1 }}\r\n                            />\r\n                            <Typography variant=\"body2\" align=\"right\" color=\"text.secondary\">\r\n                              {Math.round(uploadProgress[fileName])}%\r\n                            </Typography>\r\n                          </Box>\r\n                        )}\r\n                      </>\r\n                    }\r\n                  />\r\n                  \r\n                  <ListItemSecondaryAction>\r\n                    {isUploaded ? (\r\n                      <CheckIcon color=\"success\" />\r\n                    ) : (\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={() => removeFile(fileName)}\r\n                        disabled={isUploading}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    )}\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              );\r\n            })}\r\n          </List>\r\n          \r\n          <Box sx={{ mt: 3, display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button\r\n              color=\"error\"\r\n              onClick={() => {\r\n                setFiles([]);\r\n                setTitles({});\r\n                setErrors({});\r\n              }}\r\n              disabled={uploading || files.length === 0}\r\n            >\r\n              Clear All\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={uploading ? <CircularProgress size={20} /> : <UploadIcon />}\r\n              onClick={uploadFiles}\r\n              disabled={uploading || files.length === 0}\r\n            >\r\n              {uploading ? 'Uploading...' : `Upload ${files.length} File${files.length !== 1 ? 's' : ''}`}\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n      )}\r\n      \r\n      <Box sx={{ mt: 4, textAlign: 'center' }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => navigate('/dashboard')}\r\n          disabled={uploading}\r\n        >\r\n          Go to Dashboard\r\n        </Button>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Upload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}