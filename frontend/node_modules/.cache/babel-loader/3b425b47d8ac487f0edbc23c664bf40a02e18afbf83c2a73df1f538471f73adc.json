{"ast":null,"code":"var _jsxFileName = \"E:\\\\FULL STACK\\\\AI Document Search\\\\frontend\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Container, Typography, Box, Paper, Button, CircularProgress, Alert } from '@mui/material';\nimport { CloudUpload as CloudUploadIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    accept: {\n      'application/pdf': ['.pdf'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'text/plain': ['.txt']\n    },\n    maxSize: 10 * 1024 * 1024,\n    // 10MB\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles);\n      setError(null);\n      setSuccess(false);\n    }\n  });\n  const handleUpload = async () => {\n    if (files.length === 0) return;\n    setUploading(true);\n    setError(null);\n    setSuccess(false);\n    try {\n      // TODO: Implement actual API call\n      // const formData = new FormData();\n      // files.forEach(file => formData.append('files', file));\n      // await axios.post('/api/upload', formData);\n\n      // Temporary success message\n      setSuccess(true);\n      setFiles([]);\n    } catch (error) {\n      setError('Error uploading files. Please try again.');\n      console.error('Upload error:', error);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    sx: {\n      py: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      gutterBottom: true,\n      children: \"Upload Documents\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      ...getRootProps(),\n      sx: {\n        p: 4,\n        textAlign: 'center',\n        border: '2px dashed',\n        borderColor: isDragActive ? 'primary.main' : 'grey.300',\n        backgroundColor: isDragActive ? 'action.hover' : 'background.paper',\n        cursor: 'pointer',\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CloudUploadIcon, {\n        sx: {\n          fontSize: 48,\n          color: 'primary.main',\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: isDragActive ? 'Drop the files here' : 'Drag and drop files here, or click to select files'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: \"Supported formats: PDF, DOCX, TXT (Max size: 10MB)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Selected Files:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), files.map((file, index) => /*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: 2,\n          mb: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [(file.size / 1024 / 1024).toFixed(2), \" MB\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mb: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mb: 2\n      },\n      children: \"Files uploaded successfully!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"large\",\n      onClick: handleUpload,\n      disabled: files.length === 0 || uploading,\n      startIcon: uploading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 32\n      }, this) : null,\n      children: uploading ? 'Uploading...' : 'Upload Files'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"j45zRbkBeCYkiUCoC1D9HK8VW9o=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useDropzone","Container","Typography","Box","Paper","Button","CircularProgress","Alert","CloudUpload","CloudUploadIcon","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","uploading","setUploading","error","setError","success","setSuccess","getRootProps","getInputProps","isDragActive","accept","maxSize","onDrop","acceptedFiles","handleUpload","length","console","maxWidth","sx","py","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","p","textAlign","border","borderColor","backgroundColor","cursor","mb","fontSize","color","map","file","index","name","size","toFixed","severity","onClick","disabled","startIcon","_c","$RefreshReg$"],"sources":["E:/FULL STACK/AI Document Search/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { CloudUpload as CloudUploadIcon } from '@mui/icons-material';\r\n\r\nfunction Upload() {\r\n  const [files, setFiles] = useState([]);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    accept: {\r\n      'application/pdf': ['.pdf'],\r\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\r\n      'text/plain': ['.txt'],\r\n    },\r\n    maxSize: 10 * 1024 * 1024, // 10MB\r\n    onDrop: (acceptedFiles) => {\r\n      setFiles(acceptedFiles);\r\n      setError(null);\r\n      setSuccess(false);\r\n    },\r\n  });\r\n\r\n  const handleUpload = async () => {\r\n    if (files.length === 0) return;\r\n\r\n    setUploading(true);\r\n    setError(null);\r\n    setSuccess(false);\r\n\r\n    try {\r\n      // TODO: Implement actual API call\r\n      // const formData = new FormData();\r\n      // files.forEach(file => formData.append('files', file));\r\n      // await axios.post('/api/upload', formData);\r\n      \r\n      // Temporary success message\r\n      setSuccess(true);\r\n      setFiles([]);\r\n    } catch (error) {\r\n      setError('Error uploading files. Please try again.');\r\n      console.error('Upload error:', error);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\r\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n        Upload Documents\r\n      </Typography>\r\n\r\n      <Paper\r\n        {...getRootProps()}\r\n        sx={{\r\n          p: 4,\r\n          textAlign: 'center',\r\n          border: '2px dashed',\r\n          borderColor: isDragActive ? 'primary.main' : 'grey.300',\r\n          backgroundColor: isDragActive ? 'action.hover' : 'background.paper',\r\n          cursor: 'pointer',\r\n          mb: 4,\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n        <CloudUploadIcon sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          {isDragActive\r\n            ? 'Drop the files here'\r\n            : 'Drag and drop files here, or click to select files'}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Supported formats: PDF, DOCX, TXT (Max size: 10MB)\r\n        </Typography>\r\n      </Paper>\r\n\r\n      {files.length > 0 && (\r\n        <Box sx={{ mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Selected Files:\r\n          </Typography>\r\n          {files.map((file, index) => (\r\n            <Paper key={index} sx={{ p: 2, mb: 1 }}>\r\n              <Typography>{file.name}</Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {(file.size / 1024 / 1024).toFixed(2)} MB\r\n              </Typography>\r\n            </Paper>\r\n          ))}\r\n        </Box>\r\n      )}\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {success && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          Files uploaded successfully!\r\n        </Alert>\r\n      )}\r\n\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        onClick={handleUpload}\r\n        disabled={files.length === 0 || uploading}\r\n        startIcon={uploading ? <CircularProgress size={20} /> : null}\r\n      >\r\n        {uploading ? 'Uploading...' : 'Upload Files'}\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Upload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}